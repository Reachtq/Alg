#include <iostream>

using namespace std;

struct stack {
    char c;
    stack* next;
};

stack* In_stack(stack* p, char s) {
    stack* t = new stack;
    t->c = s;
    t->next = p;
    return t;
}

stack* Out_stack(stack* p, char* s) {
    stack* t = p;
    *s = p->c;
    p = p->next;
    delete t;
    return p;
}

int Pr_oper(char a) {
    switch (a) {
    case '*': return 3;
    case '/': return 3;
    case '-': return 2;
    case '+': return 2;
    case '(': return 1;
    }
    return 0;
}

int main()
{
    stack* t;
    stack *m = NULL;
    char a, infix[30], postfix[30];
    int i = 0, j = 0;
    setlocale(LC_ALL, "Russian");
    cout << "Введите выражение: ";
    cin >> infix;
    while (infix[i] != '\0') {
        if (infix[i] >= '0' && infix[i] <= '9')
            postfix[j++] = infix[i];
        if (infix[i] == '(')
            m = In_stack(m, infix[i]);
        if (infix[i] == ')') {
            while ((m->c) != '(') {
                m = Out_stack(m, &a);
                if (!m)a = '\0';
                postfix[j++] = a;
            }
            t = m;
            m = m->next;
            delete t;
        }
        if (infix[i] == '+' || infix[i] == '-' || infix[i] == '*' || infix[i] == '/') {
            while (m != NULL && Pr_oper(m->c) >= Pr_oper(infix[i])) {
                m = Out_stack(m, &a);
                postfix[j++] = a;
            }
            m = In_stack(m, infix[i]);
        }
        i++;
    }
    while (m != NULL) {
        m = Out_stack(m, &a);
        postfix[j++] = a;
    }
    postfix[j] = '\0';
    cout << "\nПостфиксная запись этого выражения: " << postfix;
    system("pause");
    return 0;
}
